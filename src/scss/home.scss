@use "base/mixins";
@use "sass:math";
@use "variables";

//====================================================================================================
:root {
  --globalAnimDuration: 0.7s;
  --globalAnimDelay: 0.05s;
  // --globalTransitionTiming: cubic-bezier(.67,.17,.51,1.11);
  --globalTransitionTiming: ease;
}

.hero {
  position: relative;

  &::after {
    content: '';
    position: absolute;
    z-index: 1;
    bottom: 0;
    height: 100%;
    width: 100%;
    background-image: url('img/hero/pattern.webp');
    background-repeat: no-repeat;
    background-position: bottom center;
    background-size: contain;
    mix-blend-mode: lighten;

    @media (max-width:mixins.toEm(variables.$mobile)) {
      background: none;
    }
  }

  &__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--light_grey);

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      // object-position: 100% 0;

      @media (max-width:mixins.toEm(variables.$mobile)) {
        object-position: center;
      }
    }
  }

  &__car {
    // max-width: mixins.toRem(631);
    max-height: mixins.toRem(318);
    position: absolute;
    // right: mixins.toRem(95);
    // bottom: mixins.toRem(83);

    @include mixins.adaptiveValue("max-width", 631, 600, 1920, 1340);
    @include mixins.adaptiveValue("right", 95, -160, 1920, 1340);
    @include mixins.adaptiveValue("bottom", 83, 54);

    @media (min-width:mixins.toEm(1921)) {
      min-width: mixins.toRem(631);
      min-height: mixins.toEm(347);
      bottom: mixins.toRem(70);
    }

    @media(max-width: mixins.toEm(variables.$laptop)) {
      @include mixins.adaptiveValue("max-width", 450, 440, variables.$laptop, 992);
      @include mixins.adaptiveValue("right", 43, -110, variables.$laptop, 992);
      @include mixins.adaptiveValue("bottom", 56, 55, variables.$laptop, 992);
    }

    @media(max-width: mixins.toEm(variables.$tablet)) {
      @include mixins.adaptiveValue("right", -110, -220, variables.$tablet, 768);
      bottom: mixins.toRem(50);
    }

    @media(max-width: mixins.toEm(variables.$mobile)) {
      right: auto;
      @include mixins.adaptiveValue("max-width", 540, 258, variables.$mobile, 320);
      @include mixins.adaptiveValue("bottom", 160, 237, variables.$mobile, 320);
      @include mixins.adaptiveValue("left", 43, 0, variables.$mobile, 320);
    }

    .car {
      width: 100%;
      height: 100%;
      position: relative;
      z-index: 2;
    }


    .headlights {
      position: absolute;
      z-index: 2;
      width: 100%;
      height: auto;
      top: 17%;
      right: 4%;
      pointer-events: none;
      mix-blend-mode: screen;

      img {
        mix-blend-mode: screen;
      }

      &__right {
        position: absolute;
        top: 3%;
        right: 46%;
        transform: scaleX(-1);
      }

      @media(min-width: mixins.toEm(1921)) {
        top: 25%;
        right: 1%;

        &__right {
          right: 55%;
        }
      }

      @media(max-width: mixins.toEm(variables.$laptop)) {
        top: 7%;
        right: 6%;

        &__right {
          right: 37%;
        }
      }

      @media(max-width: mixins.toEm(variables.$mobile)) {
        @include mixins.adaptiveValue("right", 25, 30, variables.$mobile, 480);
        @include mixins.adaptiveValue("top", 35, 0, variables.$mobile, 480);

      

        &__right {
          @include mixins.adaptiveValue("right", 230, 90, variables.$mobile, 480);
          top: 2%;
        }
      }

      @media(max-width: mixins.toEm(variables.$mobileSmall)) {
        @include mixins.adaptiveValue("right", 5, 8, variables.$mobileSmall, 320);
        @include mixins.adaptiveValue("top", 43, 23, variables.$mobileSmall, 320);
       

        &__right {
          @include mixins.adaptiveValue("right", 200, 130, variables.$mobileSmall, 320);
          top: 3%;
        }
      }
    }

  }

  &__wrapper {
    position: relative;
    z-index: 3;

    @media (max-width:mixins.toEm(variables.$mobile)) {
      // background: linear-gradient(360deg, rgba(49, 76, 97, 0) 60.35%, rgba(44, 66, 91, 0.6) 76.12%);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      height: mixins.toRem(602);

      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: mixins.toRem(217);
        // background: linear-gradient(180.1deg, rgba(17, 41, 69, 0.4) 11.16%, rgba(17, 41, 69, 0) 99.92%);
      }
    }
  }

  &__container {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    position: relative;
    z-index: 2;

    @media (min-width:mixins.toEm(variables.$laptop)) {
      padding-top: mixins.toRem(35);
      padding-bottom: mixins.toRem(130);
    }

    @media (max-width:mixins.toEm(variables.$laptop)) {
      padding-top: mixins.toRem(28);
      padding-bottom: mixins.toRem(75);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      box-sizing: border-box;
      height: 100%;
      padding-top: mixins.toRem(25);
      padding-bottom: mixins.toRem(35);
    }
  }

  &__logo {
    display: flex;
    z-index: 2;

    @include mixins.adaptiveValue("max-width", 139, 72);

    @include mixins.adaptiveValue("margin-bottom", 37, 35);

    img {
      width: 100%;
      height: 100%;
    }
  }

  &__title {
    font-weight: 700;
    color: var(--white);
    line-height: 1;
    position: relative;
    max-width: mixins.vw(1155, 1320);
    margin-bottom: mixins.toRem(31);

    @include mixins.adaptiveValue("font-size", 32, 24);

    @media (max-width:mixins.toEm(variables.$laptop)) {
      margin-bottom: mixins.toRem(20);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      margin-bottom: mixins.toRem(25);
    }

    svg {
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      z-index: -1;
    }
  }

  &__text {
    font-size: 55px;
    font-weight: 300;
    color: var(--white);
    line-height: 120%;
    letter-spacing: -0.02em;
    text-transform: uppercase;
    text-align: center;
    margin-bottom: mixins.toRem(31);

    @include mixins.adaptiveValue("font-size", 55, 24);
    @include mixins.adaptiveValue("max-width", 1000, 344);

    @media (max-width:mixins.toEm(variables.$laptop)) {
      margin-bottom: mixins.toRem(35);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      margin-bottom: auto;
    }

  }

  &__slogan {
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    line-height: 120%;
    text-align: center;
    color: var(--white);
    height: mixins.toRem(41);
    background: var(--slogan);
    border-radius: 30px;
    margin-bottom: mixins.toRem(140);
    @include mixins.adaptiveValue("font-size", 28, 16);
    @include mixins.adaptiveValue("width", 430, 241);
    @include mixins.adaptiveValue("height", 41, 48);

    @media (max-width:mixins.toEm(variables.$laptop)) {
      margin-bottom: mixins.toRem(75);
      height: mixins.toRem(27);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      height: mixins.toRem(48);
      margin-bottom: auto;
    }
  }

  &__bottles {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    left: 18%;
    bottom: mixins.toRem(100);

    @include mixins.adaptiveValue("width", 357, 213);
    @include mixins.adaptiveValue("height", 367, 238);

    img {
      z-index: 1;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    @media (max-width: mixins.toEm(variables.$laptop)) {
      left: 12%;
      width: mixins.toRem(245);
      height: mixins.toRem(252);
      bottom: mixins.toRem(50);
    }

    @media (max-width: mixins.toEm(variables.$tablet)) {
      @include mixins.adaptiveValue("left", 100, 0, 992, 768, );
    }
  }

}

//====================================================================================================
.ow {
  &__container {
    max-width: mixins.toRem(1320);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding-right: mixins.toRem(15);
    padding-left: mixins.toRem(15);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      padding-top: mixins.toRem(100);
      padding-bottom: mixins.toRem(100);
      gap: 30px;
    }

    @media (min-width:mixins.toEm(variables.$laptop)) {
      padding-top: mixins.toRem(140);
      padding-bottom: mixins.toRem(140);
      gap: 40px;
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      padding-top: mixins.toRem(90);
      padding-bottom: mixins.toRem(90);
      gap: 30px;
    }
  }


  &__title {
    text-transform: uppercase;
    max-width: mixins.toRem(970);
    line-height: math.div(60, 50);
    font-weight: 400;
    color: var(--black);

    @include mixins.adaptiveValue("font-size", 45, 24);

    @media (max-width:mixins.toEm(variables.$laptop)) {
      max-width: mixins.toRem(620);
    }
  }

  &__text {
    max-width: mixins.toRem(1096);
    color: var(--grey-dark);
    line-height: 130%;
    text-wrap: balance;

    @include mixins.adaptiveValue("font-size", 32, 16);

    @media (max-width:mixins.toEm(variables.$laptop)) {
      text-wrap: wrap;
      max-width: mixins.toRem(1022);
    }

    span {
      @media (max-width:mixins.toEm(variables.$mobile)) {
        display: block;
      }
    }
  }
}

//==========================================================================================
.advantages {

  &__container {
    padding-top: mixins.toRem(140);
    padding-bottom: mixins.toRem(140);
    max-width: mixins.toRem(1320);
    display: grid;
    position: relative;
    @include mixins.adaptiveValue("gap", 132, 40);

    @media (min-width:mixins.toEm(variables.$tablet)) {
      grid-template-columns: 1fr 1.2fr;
    }
  }

  &__head {
    display: flex;
    flex-direction: column;
    @include mixins.adaptiveValue("gap", 25, 10);
  }

  &__subtitle {
    text-transform: uppercase;
    font-weight: 500;
    line-height: math.div(15, 22);
    opacity: 0;
    translate: 0 mixins.toRem(30);

    @media (max-width:mixins.toEm(variables.$mobile)) {
      line-height: math.div(25, 18);
    }

    @include mixins.adaptiveValue("font-size", 22, 18);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__title {
    text-transform: uppercase;
    line-height: math.div(60, 50);
    opacity: 0;
    translate: 0 mixins.toRem(30);

    @include mixins.adaptiveValue("font-size", 50, 30);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);
      transition-delay: calc(var(--globalAnimDuration) / 2);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__body {
    @include mixins.adaptiveValue("gap", 20, 10);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      display: flex;
      padding-bottom: mixins.toRem(15);
      overflow-x: auto;
      overflow-y: hidden;
      scroll-snap-type: x mandatory;
      margin-right: mixins.toRem(-15);
      padding-right: mixins.toRem(15);

      &::-webkit-scrollbar {
        height: mixins.toRem(3);
        display: none;
      }
    }
  }

  &__item {
    @media (max-width:mixins.toEm(variables.$mobile)) {
      flex: 1 0 mixins.toRem(227);
      scroll-snap-align: start;
    }
  }
}

.item-advantages {
  background-color: var(--light);
  border-radius: mixins.toRem(15);
  padding: mixins.toRem(20);
  opacity: 0;
  translate: 0 mixins.toRem(30);
  cursor: pointer;
  position: relative;
  overflow: hidden;

  @media (min-width:mixins.toEm(variables.$mobile)) {
    &:nth-child(odd) {
      transform-origin: left bottom;
    }

    &:nth-child(even) {
      transform-origin: right bottom;
    }
  }

  @media (max-width:mixins.toEm(variables.$mobile)) {
    transform-origin: left bottom;
  }

  .loaded & {
    transition:
      background-color 0.3s ease 0s,
      scale 0.3s ease 0s,
      translate var(--globalAnimDuration) var(--globalTransitionTiming),
      opacity var(--globalAnimDuration) var(--globalTransitionTiming);

    --delay: calc((var(--globalAnimDuration) / 4) * var(--index, 1) + (var(--globalAnimDuration) / 3));

    transition-delay: 0s, 0s, var(--delay), var(--delay);
  }

  &:hover {
    background-color: var(--red);
    color: var(--white);
    --bdc: var(--white);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      scale: 1.03;
    }
  }

  .loaded ._watcher-view & {
    opacity: 1;
    translate: 0 0;
  }

  &__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(276.61deg, #BC1F29 -2.76%, #E2000F 98.82%);
    pointer-events: none;
    opacity: 0;
    border-radius: mixins.toRem(15);

    .loaded & {
      transition: opacity 0.3s ease 0s;
    }

    .item-advantages:hover & {
      opacity: 1;
    }
  }

  &__head {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: mixins.toRem(15);
    position: relative;
    z-index: 2;

    &:not(:last-child) {
      @include mixins.adaptiveValue("margin-bottom", 32, 22);
    }
  }

  &__icon {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;

    @include mixins.adaptiveValue("width", 86, 75);
    @include mixins.adaptiveValue("height", 98, 86);

    ._hexagon {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: var(--red);
      clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);

      .loaded & {
        transition: background-color 0.3s ease 0s;
      }

      .item-advantages:hover & {
        background-color: var(--white);
      }
    }
  }

  &__index {
    color: var(--grey);
    font-size: mixins.toRem(22);
    line-height: math.div(30.8, 22);

    .loaded & {
      transition: color 0.3s ease 0s;
    }

    .item-advantages:hover & {
      color: var(--white);
    }
  }

  &__text {
    line-height: math.div(28.6, 22);
    position: relative;
    z-index: 2;

    @include mixins.adaptiveValue("font-size", 22, 18);

    @media (max-width:mixins.toEm(variables.$mobile)) {
      line-height: math.div(23.4, 18);
    }

    .loaded & {
      transition: color 0.3s ease 0s;
    }
  }
}

.icon-item-advantages {
  position: relative;
  width: calc(100% - mixins.toRem(4));
  height: calc(100% - mixins.toRem(4));
  background-color: var(--light);
  clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);

  &__bg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #E2000F;
    opacity: 0;

    .loaded & {
      transition: opacity 0.3s ease 0s;
    }

    .item-advantages:hover & {
      opacity: 1;
    }
  }

  &__gear {
    position: absolute;
    aspect-ratio: 1;

    svg {
      width: 100%;
      height: 100%;
    }

    &,
    * {
      .loaded & {
        transition: fill 0.3s ease 0s, stroke 0.3s ease 0s, rotate 0.4s ease 0s;
      }
    }

    .item-advantages:hover & {
      rotate: -180deg;

      [fill] {
        fill: var(--white);
      }

      [stroke] {
        stroke: var(--white);
      }
    }

    &_big {
      width: mixins.percent(44, 86);
      left: mixins.percent(5, 86);
      top: mixins.percent(24, 98);
    }

    &_small {
      width: mixins.percent(29, 86);
      top: mixins.percent(21.62, 98);
      right: mixins.percent(6, 86);
    }
  }

  &__gear2 {
    position: absolute;
    aspect-ratio: 1;

    svg {
      width: 100%;
      height: 100%;
    }

    &,
    * {
      .loaded & {
        transition: all 0.3s ease 0s;
      }
    }

    .item-advantages:hover & {
      ._fill {
        &[fill] {
          fill: var(--light);
        }

        &[stroke] {
          stroke: var(--light);
        }
      }

      ._hole {
        &[fill] {
          fill: var(--red);
        }

        &[stroke] {
          stroke: var(--red);
        }
      }
    }

    &_big {
      bottom: mixins.percent(9, 98);
      left: mixins.toRem(2);
      width: mixins.percent(51, 86);

      .item-advantages:hover & {
        rotate: 180deg;
      }
    }

    &_small {
      top: mixins.percent(13, 98);
      right: mixins.percent(4, 86);
      width: mixins.percent(36, 86);

      .item-advantages:hover & {
        rotate: -180deg;
      }
    }
  }

  &__circle {
    position: absolute;
    right: mixins.toRem(4);
    bottom: 0;
    background-color: var(--red);
    border-radius: 50%;
    border: mixins.toRem(2) solid var(--light);
    display: flex;
    align-items: center;
    overflow: hidden;
    z-index: 5;

    @include mixins.adaptiveValue("width", 37, 32);
    @include mixins.adaptiveValue("height", 37, 32);

    .loaded & {
      transition: background-color 0.3s ease 0s;
    }


    svg {
      flex: 0 0 100%;
      translate: mixins.toRem(2) 0;

      .loaded & {
        * {
          transition: all 0.3s ease 0s;
        }
      }
    }

    &_arrows {
      justify-content: flex-end;

      .item-advantages:hover & {
        background-color: var(--white);
      }

      svg {
        .loaded & {
          transition: translate 0.4s ease 0s;
        }

        .item-advantages:hover & {
          translate: calc(100% + mixins.toRem(2)) 0;

          [fill] {
            fill: var(--red);
          }

          [stroke] {
            stroke: var(--red);
          }
        }
      }
    }

    &_chem {
      justify-content: center;
      align-items: center;
    }
  }

  &__shield {
    position: absolute;
    top: 55%;
    left: 50%;
    translate: -50% -50%;
    width: mixins.percent(57, 86);
    height: mixins.percent(59, 98);

    * {
      .loaded & {
        transition: fill 0.3s ease 0s, stroke 0.3s ease 0s;
      }
    }

    .item-advantages:hover & {
      [fill] {
        fill: var(--white);
      }

      [stroke] {
        stroke: var(--white);
      }
    }
  }

  &__piston {
    position: absolute;
    top: 55%;
    left: 50%;
    translate: -50% -50%;
    width: mixins.percent(18, 86);
    height: mixins.percent(40, 98);

    * {
      .loaded & {
        transition: fill 0.3s ease 0s, stroke 0.3s ease 0s;
      }
    }

    .item-advantages:hover & {
      [fill] {
        fill: var(--red);
      }

      [stroke] {
        stroke: var(--red);
      }
    }
  }

  &__snow {
    position: absolute;
    background-color: var(--white);
    display: flex;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1;
    border-radius: 50%;
    z-index: 5;

    svg {
      width: mixins.percent(21.805, 26.33);
      height: mixins.percent(21.805, 26.33);
    }

    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      background: radial-gradient(50% 50% at 50% 50%, transparent 50.65%, rgba(7, 126, 212, 0.61) 100%);
      z-index: -1;
      visibility: hidden;

      .item-advantages:hover & {
        scale: 5;
        opacity: 0;
        visibility: visible;

        .loaded & {
          transition: scale 0.3s ease 0s, opacity 0.6s ease 0s;
        }
      }
    }

    &_big {
      top: mixins.percent(5.31, 98);
      right: mixins.percent(7.85, 86);

      @include mixins.adaptiveValue("width", 26.33, 24);

      svg {
        translate: mixins.toRem(.5) mixins.toRem(-0.5);
      }
    }

    &_small {
      bottom: mixins.percent(9, 98);
      left: mixins.percent(5, 86);

      svg {
        translate: mixins.toRem(-0.25) mixins.toRem(0.25);
      }
    }
  }

  &__blob {
    position: absolute;
    right: mixins.toRem(0);
    top: mixins.percent(7, 98);
    z-index: 0;
    opacity: 0;

    .loaded & {
      transition: opacity 0.3s ease 0s;
    }

    svg {
      // width: mixins.percent(82,86);
      // height: mixins.percent(90,98);
    }

    .item-advantages:hover & {
      opacity: 1;
    }
  }

  &__grid {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    background-color: var(--grey);
    clip-path: polygon(0 25%, 50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%);
    display: flex;
    justify-content: center;
    align-items: center;
    width: mixins.percent(69, 86);
    height: mixins.percent(74, 98);
    overflow: hidden;

    .loaded & {
      transition: background-color 0.3s ease 0s;
    }

    .item-advantages:hover & {
      background-color: var(--yellow);
    }

    svg {
      width: 100%;
      height: 100%;
      scale: 1.2 1.09;

      .loaded & {
        transition: scale 0.3s ease 0s;
      }

      .item-advantages:hover & {
        scale: 1.5 1.09;
      }
    }
  }

  &__speed {
    position: absolute;
    top: 40%;
    left: 50%;
    translate: -50% -50%;
    width: mixins.percent(72, 86);
    height: mixins.percent(42, 98);

    svg {
      width: 100%;
      height: 100%;
    }

    * {
      .loaded & {
        transition: all 0.3s ease 0s;
      }
    }

    .item-advantages:hover & {
      [fill] {
        fill: var(--white);
      }

      [stroke] {
        stroke: var(--white);
      }
    }

    ._arrow {
      position: absolute;
      left: 0;
      bottom: mixins.toRem(1);
      transform-origin: bottom center;

      .loaded & {
        transition: all 0.3s ease 0s;
      }

      .item-advantages:hover & {
        rotate: 115deg;
        left: mixins.toRem(-4);
        bottom: mixins.toRem(7);
      }
    }
  }
}

//==========================================================================================
.tech {
  position: relative;
  min-height: mixins.toRem(520);
  display: flex;
  --animDuration: calc(var(--globalAnimDuration) * 0.55);

  &__bgs {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;

    @media (min-width:mixins.toEm(variables.$tablet)) {
      display: grid;
      grid-template-columns: 1fr 1.02fr;
    }
  }

  &__leftbg {
    img {
      height: 100%;
      object-fit: cover;
      object-position: center;
    }

    @media (min-width:mixins.toEm(variables.$tablet)) {
      img {
        max-width: none;
        width: mixins.percent(1370, 952);
      }
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      img {
        max-width: none;
      }

      position: relative;
      z-index: 2;
      border-radius: mixins.toRem(15);
      overflow: hidden;
      height: mixins.percent(531, 1037);
    }

    @media (max-width:mixins.toEm(variables.$mobileSmall)) {
      img {
        width: 100%;
      }
    }
  }

  &__rightbg {
    position: relative;
    display: flex;
    justify-content: flex-end;
    background: linear-gradient(154deg, #e5ceac 0%, #b58e5c 100%);

    @media (min-width:mixins.toEm(variables.$tablet)) {
      border-radius: mixins.toRem(20);
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      border-radius: 0 0 mixins.toRem(20) mixins.toRem(20);
      margin-top: mixins.toRem(-36);
      height: mixins.percent(542, 1037);
    }

    img {
      mix-blend-mode: overlay;
      max-height: 100%;

      @media (max-width:mixins.toEm(variables.$tablet)) {
        display: none;
      }
    }
  }

  &__container {
    flex: 1 1 auto;
    position: relative;
    z-index: 2;
    max-width: mixins.toRem(1320);
    display: grid;
    justify-content: space-between;
    align-items: center;

    @include mixins.adaptiveValue("column-gap", 370, 300, 1320, 992);
    @include mixins.adaptiveValue("padding-top", 55, 35);

    @media (min-width:mixins.toEm(variables.$tablet)) {
      padding-bottom: mixins.toRem(61);
      grid-template-columns: repeat(2, 1fr);
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      padding-bottom: mixins.toRem(87);
    }
  }

  &__left {
    align-self: stretch;

    @media (min-width:mixins.toEm(variables.$tablet)) {
      max-width: mixins.toRem(427);
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      &:not(:last-child) {
        margin-bottom: mixins.toRem(99);
      }
    }
  }

  &__middle {
    z-index: 2;

    @media (min-width:mixins.toEm(variables.$tablet)) {
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -63% -50%;
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      z-index: 3;
    }

    @include mixins.adaptiveValue("height", 399, 308);

    img {
      &:not(.tech__light):not(.tech__sqare) {
        height: 100%;
        position: relative;
        z-index: 2;
      }
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;

      &:not(:last-child) {
        margin-bottom: mixins.toRem(30);
      }
    }
  }

  &__light {
    position: absolute;
    height: 100%;
    top: 50%;
    left: 0;
    translate: 0 -50%;
  }

  &__sqare {
    position: absolute;
    left: 80.5%;
    top: 50%;
    translate: 0% -50%;
    height: mixins.toRem(203);
  }

  &__right {
    margin-left: auto;
    position: relative;
    z-index: 2;

    @media (min-width:mixins.toEm(variables.$tablet)) {
      max-width: mixins.toRem(455);
    }
  }
}

.left-tech {
  display: flex;
  flex-direction: column;

  &__head {
    display: flex;
    flex-direction: column;
    @include mixins.adaptiveValue("gap", 25, 10);

    &:not(:last-child) {
      margin-bottom: mixins.toRem(40);
    }
  }

  &__title {
    text-transform: uppercase;
    line-height: math.div(54, 45);
    opacity: 0;
    translate: 0 mixins.toRem(30);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--globalAnimDuration) / 2);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }

    @include mixins.adaptiveValue("font-size", 45, 32);
  }

  &__logo {
    opacity: 0;
    translate: 0 mixins.toRem(30);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--animDuration) * (var(--max_index, 2) + 1.5));
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__button {
    margin-top: auto;
    width: max-content;
    opacity: 0;
    translate: 0 mixins.toRem(30);

    .loaded & {
      transition:
        translate var(--animDuration) var(--globalTransitionTiming),
        opacity var(--animDuration) var(--globalTransitionTiming);

      @media (min-width:mixins.toEm(variables.$tablet)) {
        transition-delay: calc(var(--animDuration) * (var(--max_index, 2) + 2.5));
      }

      @media (max-width:mixins.toEm(variables.$tablet)) {
        transition-delay: var(--globalAnimDuration);
      }
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }
}

.right-tech {
  width: 100%;

  &__itemwrap {
    position: relative;
    // opacity: 0;

    --pl: #{mixins.toRem(7)};

    @include mixins.adaptiveValue("--img_width", 118, 95);
    @include mixins.adaptiveValue("--mb", 70, 30, 1320, 992);
    @include mixins.adaptiveValue("--pt", 13, 9);
    @include mixins.adaptiveValue("--gap", 20, 10);

    &:not(:last-child) {
      margin-bottom: var(--mb);
    }

    @media (max-width:mixins.toEm(variables.$tablet)) {
      --pl: #{mixins.toRem(12)};

      &::before {
        content: '';
        position: absolute;
        bottom: 100%;
        left: 50%;
        width: mixins.toRem(2);
        background-color: var(--gold);
        z-index: -1;
        padding-bottom: 0;

        .loaded & {
          transition:
            padding var(--animDuration) var(--globalTransitionTiming);

          transition-delay: calc(var(--animDuration) * (var(--index) + 2));
        }

        .loaded ._watcher-view & {
          padding-bottom: mixins.toRem(100);
        }
      }
    }
  }

  &__item {
    color: var(--white);
    display: flex;
    align-items: center;
    border-radius: calc(1px / 0);
    border: mixins.toRem(2) solid var(--border-gold);
    background-color: var(--dark-yellow);
    width: 100%;
    position: relative;
    height: calc(var(--img_width) + (var(--pt) * 2));
    width: calc(var(--img_width) + (var(--pl) * 2));
    scale: 0;

    .loaded & {
      transition:
        scale var(--animDuration) var(--globalTransitionTiming),
        padding var(--animDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--animDuration) * var(--index, 1)), calc(var(--animDuration) * (var(--index) + 1));
    }

    .loaded ._watcher-view & {
      scale: 1;
      padding-left: var(--width);
    }
  }

  &__image {
    position: absolute;
    top: 50%;
    left: var(--pl);
    translate: 0 -50%;
    z-index: 2;
    scale: 0;

    aspect-ratio: 1;
    width: var(--img_width);

    .loaded & {
      transition:
        scale var(--animDuration) var(--globalTransitionTiming);

      transition-delay: calc((var(--animDuration) / 2) * var(--index, 1));
    }

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center;
    }

    .loaded ._watcher-view & {
      scale: 1;
    }
  }

  &__text-box {
    translate: mixins.toRem(-30) -50%;
    opacity: 0;
    position: absolute;
    top: 50%;
    left: calc(var(--img_width) + var(--pl) + var(--gap));

    @include mixins.adaptiveValue("font-size", 22, 18);

    .loaded & {
      transition:
        translate var(--animDuration) var(--globalTransitionTiming),
        opacity var(--animDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--animDuration) * (var(--index, 1) + 2));
    }

    .loaded ._watcher-view & {
      translate: 0 -50%;
      opacity: 1;
    }
  }

  &__title {
    font-weight: 500;
    line-height: 120%;
    text-transform: uppercase;
    color: var(--white);

    @include mixins.adaptiveValue("font-size", 18, 16);
    @include mixins.adaptiveValue("margin-bottom", 8, 6);
  }

  &__text {
    font-weight: 400;
    font-size: 16px;
    line-height: 120%;
    color: var(--white);
    max-width: mixins.toRem(271);
  }
}

//==========================================================================================
.easystart {
  position: relative;

  @media (max-width: mixins.toEm(1100)) {
    background-color: var(--light);
    border-radius: 0 0 mixins.toRem(15) mixins.toRem(15);
  }

  &__container {
    max-width: mixins.toRem(1320);
    display: grid;
    align-items: start;

    @include mixins.adaptiveValue("padding-bottom", 39.5, 30);

    @media (min-width:mixins.toEm(1100)) {
      grid-template-columns: 1fr mixins.toRem(370) 1fr;
      gap: mixins.toRem(28);
      padding-top: mixins.toRem(39.5);
      margin-top: mixins.toRem(-16);
    }
  }

  &__item {
    opacity: 0;
    translate: 0 mixins.toRem(30);
    --icnsz: #{mixins.toRem(100)};
    border-radius: mixins.toRem(10);
    display: grid;
    grid-template-columns: var(--icnsz) auto;
    gap: mixins.toRem(20);
    align-items: center;
    line-height: math.div(26.4, 22);

    @include mixins.adaptiveValue("padding-left", 40, 10);
    @include mixins.adaptiveValue("padding-right", 40, 10);
    @include mixins.adaptiveValue("padding-top", 25, 15);
    @include mixins.adaptiveValue("padding-bottom", 25, 15);
    @include mixins.adaptiveValue("font-size", 22, 16);

    @media (min-width:mixins.toEm(1100)) {
      background-color: var(--light);
    }

    @media (max-width: mixins.toEm(1100)) {
      background-color: var(--white);
      --icnsz: #{mixins.toRem(86)};
      row-gap: mixins.toRem(0);

      &:not(:last-child) {
        margin-bottom: mixins.toRem(15);
      }
    }

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--globalAnimDuration) / 2);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__icon {
    display: flex;
    justify-content: center;
    align-items: center;

    svg {
      width: 100%;
      height: 100%;
    }

    @media (max-width: mixins.toEm(1100)) {
      grid-row: span 2;
    }
  }

  &__name {
    color: var(--red);
    display: flex;

    span {
      hyphens: auto;
    }

    @media (max-width: mixins.toEm(1100)) {
      margin-top: auto;
    }
  }

  &__text {
    @media (min-width:mixins.toEm(1100)) {
      grid-column: span 2;
    }

    @media (max-width: mixins.toEm(1100)) {
      margin-bottom: auto;
    }
  }

  &__graph {
    position: relative;
    opacity: 0;
    translate: 0 mixins.toRem(30);

    @media (min-width:mixins.toEm(1100)) {
      margin-top: mixins.toRem(-39.5);
    }

    @media (max-width: mixins.toEm(1100)) {
      margin-bottom: mixins.toRem(14);
    }

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);
    }

    i {
      display: flex;
      justify-content: center;
      align-items: center;

      svg {

        // Анимация для красной полоски
        path[stroke="url(#paint0_linear_103_2127)"] {
          stroke-dasharray: 300;
          stroke-dashoffset: 300;

          // Анимация будет запускаться только при наличии класса _watcher-view
          ._watcher-view & {
            animation: draw 2s ease-out forwards;
          }
        }

        // Анимация для конечной точки
        circle[cx="309.5"][cy="132.5"] {
          opacity: 0;

          // Анимация будет запускаться только при наличии класса _watcher-view
          ._watcher-view & {
            animation: fadeIn 0.5s 1s forwards;
          }
        }
      }
    }

    h2 {
      position: absolute;
      left: 50%;
      bottom: mixins.toRem(70);
      translate: -50% 0;
      display: flex;
      flex-direction: column;
      text-align: center;
      line-height: math.div(22, 15);

      @include mixins.adaptiveValue("font-size", 22, 15, 1320, 1100);
      @include mixins.adaptiveValue("gap", 8, 5);

      ._red {
        color: var(--red);
        line-height: math.div(63.57, 52.97);
        font-weight: 500;

        @include mixins.adaptiveValue("font-size", 50, 35, 1320, 1100);
      }
    }

    @media (max-width: mixins.toEm(1100)) {
      order: -1;
      margin-top: mixins.toRem(-57);

      svg {
        width: mixins.toRem(270);
        height: mixins.toRem(237);
      }

      ._fill {
        &[fill] {
          fill: var(--light);
        }

        &[stroke] {
          stroke: var(--light);
        }
      }

      h2 {
        bottom: mixins.toRem(55);
      }
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }

    // Ключевые кадры анимации
    @keyframes draw {
      to {
        stroke-dashoffset: 0;
      }
    }

    @keyframes fadeIn {
      to {
        opacity: 1;
      }
    }
  }
}

//==========================================================================================
.evidence {

  &__container {
    padding-top: mixins.toRem(140);
    padding-bottom: mixins.toRem(70);
    max-width: mixins.toRem(1320);
  }

  &__head {
    &:not(:last-child) {
      margin-bottom: mixins.toRem(40);
    }
  }

  &__title {
    opacity: 0;
    translate: 0 mixins.toRem(30);
    line-height: math.div(60, 50);
    text-transform: uppercase;

    @include mixins.adaptiveValue("font-size", 50, 32);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);
    }

    @media (min-width:mixins.toEm(variables.$mobile)) {
      &:not(:last-child) {
        margin-bottom: mixins.toRem(10);
      }
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      &:not(:last-child) {
        margin-bottom: mixins.toRem(20);
      }
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__subtitle {
    opacity: 0;
    translate: 0 mixins.toRem(30);
    font-size: mixins.toRem(22);
    line-height: math.div(30.8, 22);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      color: var(--dark_grey);
    }

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      transition-delay: calc(var(--globalAnimDuration) / 2);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__body {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    overflow-x: auto;
    overflow-y: hidden;
    scroll-snap-type: x mandatory;
    margin-right: mixins.toRem(-15);
    padding-right: mixins.toRem(15);

    @include mixins.adaptiveValue("gap", 20, 10);

    &::-webkit-scrollbar {
      display: none;
    }
  }

  &__slider {}

  &__track {
    overflow: visible;

    @media (min-width:mixins.toEm(variables.$mobile)) {
      &:not(:last-child) {
        margin-bottom: mixins.toRem(15);
      }
    }
  }

  &__list {}

  &__progress {
    background-color: var(--scrollbar_bg);
    height: mixins.toRem(5);
    border-radius: calc(1px / 0);
    position: relative;
    overflow: hidden;

    @media (max-width:mixins.toEm(variables.$mobile)) {
      display: none;
    }

    i {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: var(--red);
      border-radius: calc(1px / 0);

      .loaded & {
        transition: width 0.3s ease 0s, translate 0.3s ease 0s;
      }
    }
  }

  &__item {
    scroll-snap-align: start;
    opacity: 0;
    translate: 0 mixins.toRem(30);

    @include mixins.adaptiveValue("max-width", 985, 285);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      --delay: calc((var(--globalAnimDuration) / 4) * var(--index, 1) + (var(--globalAnimDuration) / 2));
      transition-delay: var(--delay);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }
}

.item-evidence {
  background-color: var(--light);
  display: grid;

  @include mixins.adaptiveValue("padding-left", 25, 17.5, 1320, 767);
  @include mixins.adaptiveValue("padding-right", 25, 17.5, 1320, 767);
  @include mixins.adaptiveValue("padding-bottom", 25, 0, 1320, 767);
  @include mixins.adaptiveValue("padding-top", 30, 20, 1320, 767);
  @include mixins.adaptiveValue("border-radius", 20, 10, 1320, 767);

  @media (min-width:mixins.toEm(variables.$mobile)) {
    gap: mixins.toRem(20);
  }

  @media (max-width:mixins.toEm(variables.$mobile)) {
    gap: mixins.toRem(25);
  }

  // @media (min-width:mixins.toEm(variables.$mobile)){
  //   grid-template-columns: 1.18fr 1fr;
  // }

  &__head {
    @media (min-width:mixins.toEm(variables.$mobile)) {
      display: flex;
      align-items: flex-end;
      gap: mixins.toRem(20);

      &:not(:last-child) {
        margin-bottom: mixins.toRem(20);
      }
    }
  }

  &__title {
    line-height: math.div(52, 60);
    white-space: nowrap;

    @include mixins.adaptiveValue("font-size", 60, 39.62);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      color: var(--red);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      line-height: 1.2;
    }
  }

  &__subtitle {
    line-height: math.div(26.4, 22);

    @include mixins.adaptiveValue("font-size", 18, 14);
    @include mixins.adaptiveValue("padding-left", 34.85, 28, 767, 375, 3);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      color: var(--dark_grey);
    }
  }

  &__text {
    @media (min-width:mixins.toEm(variables.$mobile)) {
      display: flex;
      align-items: flex-end;
      gap: mixins.toRem(20);
    }

    b {
      font-weight: 400;
      line-height: math.div(26.4, 22);
      color: var(--red);

      &:not(:last-child) {
        @include mixins.adaptiveValue("margin-bottom", 10, 5);
      }
    }

    p {
      color: var(--dark_grey);
      line-height: math.div(21.6, 18);

      @media (min-width:mixins.toEm(variables.$mobile)) {
        max-width: mixins.toRem(390);
      }

      @media (max-width:mixins.toEm(variables.$mobile)) {
        max-width: mixins.toRem(250);

        &:not(:last-child) {
          margin-bottom: mixins.toRem(15);
        }
      }
    }

    a {
      white-space: nowrap;
      @include mixins.adaptiveValue("font-size", 16, 14);
    }
  }

  &__image {
    overflow: hidden;
    position: relative;

    @include mixins.adaptiveValue("border-radius", 15, 10);

    img {
      position: relative;
      z-index: 1;
    }

    // @media (min-width:mixins.toEm(variables.$mobile)){
    //   grid-column: span 2;
    // }
    @media (max-width:mixins.toEm(variables.$mobile)) {
      margin: 0 mixins.toRem(-17.5);
    }
  }

  &__imgtext {
    text-transform: uppercase;
    font-weight: 500;

    @media (min-width:mixins.toEm(variables.$mobile)) {
      position: absolute;
      bottom: mixins.toRem(20);
      left: mixins.toRem(23);
      font-size: mixins.toRem(22);
      line-height: math.div(26.4, 22);
      z-index: 2;
      color: var(--white);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      color: var(--red);
      font-size: mixins.toRem(16);
      line-height: math.div(19, 16);

      &:not(:last-child) {
        margin-bottom: mixins.toRem(4);
      }
    }
  }
}

//==========================================================================================
.assort {

  &__container {
    max-width: mixins.toRem(1320);
    padding-top: mixins.toRem(70);

    @include mixins.adaptiveValue("padding-bottom", 100, 84);
  }

  &__title {
    opacity: 0;
    translate: 0 mixins.toRem(30);
    text-transform: uppercase;
    line-height: math.div(60, 50);

    @include mixins.adaptiveValue("font-size", 50, 32);

    &:not(:last-child) {
      margin-bottom: mixins.toRem(15);
    }

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__slider {}

  &__track {
    overflow: visible;

    &:not(:last-child) {
      margin-bottom: mixins.toRem(15);
    }
  }

  &__list {
    align-items: stretch;
  }

  &__slide {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: mixins.toRem(20);
    background-color: var(--light);
    border: mixins.toRem(1) solid var(--light_grey);
    border-radius: mixins.toRem(10);
    padding: mixins.toRem(20);
    opacity: 0;
    translate: 0 mixins.toRem(30);

    @include mixins.adaptiveValue("width", 427, 285);

    @media (max-width:mixins.toEm(variables.$mobile)) {
      padding-bottom: mixins.toRem(25);
      gap: mixins.toRem(25);
    }

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      --delay: calc((var(--globalAnimDuration) / 4) * var(--index, 1) + (var(--globalAnimDuration) / 2));
      transition-delay: var(--delay);
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }
  }

  &__image {
    max-width: mixins.toRem(164);
  }

  &__name {
    display: flex;
    flex-direction: column;
    font-weight: 500;
    line-height: math.div(30, 20);
    text-transform: uppercase;
    @include mixins.adaptiveValue("font-size", 25, 20);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      align-items: center;
    }

    span {
      white-space: nowrap;

      &:last-child {
        color: #828080;
      }
    }

    &:not(:last-child) {
      margin-bottom: mixins.toRem(5);
    }
  }

  &__buttons {
    align-self: stretch;
    display: grid;
    gap: mixins.toRem(10);
    text-align: center;
    margin-top: auto;

    @media (min-width:mixins.toEm(variables.$mobile)) {
      &:has(a:nth-child(2)) {
        grid-template-columns: repeat(2, 1fr);
      }
    }
  }

  &__button {
    font-size: mixins.toRem(14);
    padding: mixins.toRem(5) mixins.toRem(8);
    display: flex;
    justify-content: center;
    align-items: center;

    @media (min-width:mixins.toEm(variables.$mobile)) {
      min-height: mixins.toRem(61);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      br {
        display: none;
      }
    }
  }

  &__progress {
    background-color: var(--scrollbar_bg);
    height: mixins.toRem(5);
    border-radius: calc(1px / 0);
    position: relative;
    overflow: hidden;
    opacity: 0;
    translate: 0 mixins.toRem(30);

    .loaded & {
      transition:
        translate var(--globalAnimDuration) var(--globalTransitionTiming),
        opacity var(--globalAnimDuration) var(--globalTransitionTiming);

      transition-delay: 1.1s;
    }

    .loaded ._watcher-view & {
      opacity: 1;
      translate: 0 0;
    }

    i {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      background-color: var(--red);
      border-radius: calc(1px / 0);

      .loaded & {
        transition: width 0.3s ease 0s, translate 0.3s ease 0s;
      }
    }
  }
}

//==========================================================================================
.ozon {

  @media (min-width:mixins.toEm(variables.$mobile)) {
    border-radius: mixins.toRem(20) mixins.toRem(20) 0 0;
    background: var(--angularGradient);
    background-size: 100% 200%;
    background-position: 0 100%;
  }

  @media (max-width:mixins.toEm(variables.$mobile)) {
    background: conic-gradient(from 221.46deg at 64.93% 94.59%, #0069FF 0deg, #F1107E 360deg);
    background-size: 300% 150%;
    background-position: 70% 70%;
  }


  &__container {
    display: flex;
    justify-content: center;
    align-items: center;
    padding-bottom: mixins.toRem(68);
    padding-left: mixins.toRem(20);
    padding-right: mixins.toRem(20);



    @include mixins.adaptiveValue("padding-top", 65, 50);
    @include mixins.adaptiveValue("gap", 79, 30, 1320, 767);

    @media (max-width:mixins.toEm(variables.$mobile)) {
      flex-direction: column;
      text-align: center;
    }
  }

  &__title {
    color: var(--white);
    text-transform: uppercase;
    line-height: math.div(33.8, 26);

    @media (min-width:mixins.toEm(variables.$mobile)) {
      font-weight: 500;
    }

    @include mixins.adaptiveValue("font-size", 32, 26);
  }

  &__button {
    width: 100%;
    max-width: mixins.toRem(427);
    border-radius: mixins.toRem(7.84);

    @include mixins.adaptiveValue("font-size", 32, 18);
    @include mixins.adaptiveValue("height", 69, 58);
  }
}

.footer {
  background-color: var(--red);
  color: var(--light);

  &__container {
    display: flex;
    align-items: flex-start;
    gap: mixins.toRem(10);
    justify-content: space-between;
    max-width: mixins.toRem(1320);

    @include mixins.adaptiveValue("padding-top", 80, 39);
    @include mixins.adaptiveValue("padding-bottom", 120, 71);


    @media (max-width:mixins.toEm(variables.$mobile)) {
      flex-direction: column;
      align-items: center;
      text-align: center;
      gap: mixins.toRem(41);
    }
  }

  &__col {
    display: flex;
    flex-direction: column;

    a {
      display: block;
      font-size: mixins.toRem(24);
      color: var(--white);

      &:not(:last-child) {
        margin-bottom: mixins.toRem(2);
      }
    }

    span {
      font-size: mixins.toRem(14);
      line-height: math.div(24, 14);
      opacity: 0.8;
    }

    p {
      line-height: math.div(24, 16);
      font-size: mixins.toRem(16);
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      &:not(:last-child) {
        margin-bottom: mixins.toRem(9);
      }
    }
  }

  &__logo {
    height: mixins.toRem(57);

    img {
      height: 100%;
    }

    @media (max-width:mixins.toEm(variables.$mobile)) {
      order: -1;
    }
  }
}